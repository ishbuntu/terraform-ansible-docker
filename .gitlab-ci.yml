stages:
  - test
  - scan
  - build
  - deploy

variables:
  IMAGE_NAME: "myapp"
  TAG: "latest"

test:
  stage: test
  image: python:3.11
  before_script:
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - echo "🔍 Running Flask tests..."
    - python -m unittest discover -s tests

scan:
  stage: scan
  image: aquasec/trivy:latest
  script:
    - echo "🔐 Scanning Docker image for vulnerabilities..."
    - docker build -t $IMAGE_NAME:$TAG .
    - trivy image --exit-code 0 --severity HIGH,CRITICAL $IMAGE_NAME:$TAG

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "🐳 Building Docker image..."
    - docker build -t $IMAGE_NAME:$TAG .

deploy:
  stage: deploy
  image: alpine:latest
  only:
    - main
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    # Disable strict host checking 
    - echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
  script:
    - echo "🚀 Deploying to EC2..."
    - scp docker-compose.yml ec2-user@$EC2_IP:/home/ec2-user/
    - ssh ec2-user@$EC2_IP 'docker-compose -f /home/ec2-user/docker-compose.yml up -d --build'
